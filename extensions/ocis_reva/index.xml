<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reva on ownCloud</title>
    <link>https://owncloud.github.io/extensions/ocis_reva/</link>
    <description>Recent content in Reva on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://owncloud.github.io/extensions/ocis_reva/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker Docker images for ocis-reva are hosted on https://hub.docker.com/r/owncloud/ocis-reva.
The latest tag always reflects the current master branch.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/configuration/</link>
      <pubDate>Wed, 15 Apr 2020 16:26:55 +0200</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/configuration/</guid>
      <description>Configuration oCIS Single Binary is not responsible for configuring extensions. Instead, each extension could either be configured by environment variables, cli flags or config files.
Each extension has its dedicated documentation page (e.g. https://owncloud.github.io/extensions/ocis_proxy/configuration) which lists all possible configurations. Config files and environment variables are picked up if you use the ./bin/ocis server command within the oCIS single binary. Command line flags must be set explicitly on the extensions subcommands.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go.To build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-reva.git cd ocis-reva All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/users/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/users/</guid>
      <description>Demo driver This is a simple user driver for testing. It contains three users:
einstein:relativity marie:radioactivty richard:superfluidity  In order to use the demo driver you need to export the relevant environment variable:
export REVA_USERS_DRIVER=demo  JSON driver In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:
export REVA_USERS_DRIVER=json export REVA_USERS_JSON=/path/to/users.json  For the format of the users.json have a look at the reva examples</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/testing/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/testing/</guid>
      <description>Acceptance tests We are using the ownCloud 10 acceptance testsuite against ocis. To set this up you need the owncloud 10 core repo, a ldap server that the acceptance tests can use to manage users, a redis server for file-versions and the ocis-reva code.
Getting the tests All you need to do to get the acceptance tests is check out the core repo:
git clone https://github.com/owncloud/core.git  Run a ldap server in a docker container The ownCloud 10 acceptance tests will need write permission.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
  </channel>
</rss>