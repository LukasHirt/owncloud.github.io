<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on ownCloud</title>
    <link>https://owncloud.github.io/</link>
    <description>Recent content in Documentation on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Apr 2020 21:24:14 +0200</lastBuildDate>
    
	<atom:link href="https://owncloud.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://owncloud.github.io/extensions/ocis_proxy/about/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_proxy/about/</guid>
      <description>This service provides an proxy service that routes requests to the correct services.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/clients/web/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/getting-started/</guid>
      <description>   Installation Docker TBD
Binaries TBD
Source code The source code is hosted at https://github.com/owncloud/phoenix Please refer to the build documentation for Phoenix.
Setting up backend and running Phoenix can run against either ownCloud 10 as backend or OCIS. Depending which one you chose, please check the matching section:
 Setting up with ownCloud as backend Setting up with OCIS as backend  Running  Running with ownCloud as backend Running with OCIS as backend  </description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_hello/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_hello/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_konnectd/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_konnectd/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/ocis/getting-started/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker Docker images for ocis are hosted on https://hub.docker.com/r/owncloud/ocis.
The latest tag always reflects the current master branch.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_proxy/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_proxy/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker Docker images for ocis-reva are hosted on https://hub.docker.com/r/owncloud/ocis-proxy.
The latest tag always reflects the current master branch.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker Docker images for ocis-reva are hosted on https://hub.docker.com/r/owncloud/ocis-reva.
The latest tag always reflects the current master branch.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/extensions/ocis_proxy/configuration/</link>
      <pubDate>Mon, 20 Apr 2020 21:24:14 +0200</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_proxy/configuration/</guid>
      <description>Configuration oCIS Single Binary is not responsible for configuring extensions. Instead, each extension could either be configured by environment variables, cli flags or config files.
Each extension has its dedicated documentation page (e.g. https://owncloud.github.io/extensions/ocis_proxy/configuration) which lists all possible configurations. Config files and environment variables are picked up if you use the ./bin/ocis server command within the oCIS single binary. Command line flags must be set explicitly on the extensions subcommands.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/configuration/</link>
      <pubDate>Wed, 15 Apr 2020 16:26:55 +0200</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/configuration/</guid>
      <description>Configuration oCIS Single Binary is not responsible for configuring extensions. Instead, each extension could either be configured by environment variables, cli flags or config files.
Each extension has its dedicated documentation page (e.g. https://owncloud.github.io/extensions/ocis_proxy/configuration) which lists all possible configurations. Config files and environment variables are picked up if you use the ./bin/ocis server command within the oCIS single binary. Command line flags must be set explicitly on the extensions subcommands.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/ocis/configuration/</link>
      <pubDate>Tue, 14 Apr 2020 22:00:52 +0200</pubDate>
      
      <guid>https://owncloud.github.io/ocis/configuration/</guid>
      <description>Configuration oCIS Single Binary is not responsible for configuring extensions. Instead, each extension could either be configured by environment variables, cli flags or config files.
Each extension has its dedicated documentation page (e.g. https://owncloud.github.io/extensions/ocis_proxy/configuration) which lists all possible configurations. Config files and environment variables are picked up if you use the ./bin/ocis server command within the oCIS single binary. Command line flags must be set explicitly on the extensions subcommands.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_hello/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_hello/building/</guid>
      <description>As this project is built with Go and NodeJS, so you need to install that first. The installation of Go and NodeJS is out of the scope of this document, please follow the official documentation for Go, NodeJS and Yarn, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-hello.git cd ocis-hello All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building from source</title>
      <link>https://owncloud.github.io/clients/web/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/building/</guid>
      <description>Building Phoenix  Run yarn install to install core dependencies Run yarn install-all to install dependencies of all apps and core Run yarn dist to build Phoenix and all apps included in the apps folder  Updating dependencies  Run yarn upgrade-all to update core and app dependencies  Cleaning up the workspace  Run yarn clean-all to remove node_modules and dist folder  Buildling the documentation Setting up  Install hugo Run make docs  Viewing the documentation To view the rendered docs in the browser run:</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_accounts/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_accounts/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_glauth/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_glauth/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_phoenix/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_phoenix/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis_thumbnails/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_thumbnails/getting-started/</guid>
      <description>Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.
Docker TBD
Binaries TBD
Configuration We provide overall three different variants of configuration. The variant based on environment variables and commandline flags are split up into global values and command-specific values.</description>
    </item>
    
    <item>
      <title>Bridge</title>
      <link>https://owncloud.github.io/ocis/bridge/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/bridge/</guid>
      <description>We are planning to build a bridge from ownCloud 10 to ocis. The idea is to have a reverse proxy infront of ownCloud 10 that will forward requests to ownCloud 10 or ocis-reva, depending on the migration status of the logged in user.
This document is a work in progress of the current setup.
Current status Using ocis and the ownCloud 10 openidconnect and graphapi plugins it is possible today to introduce openid connect based authentication to existing instances.</description>
    </item>
    
    <item>
      <title>EOS</title>
      <link>https://owncloud.github.io/ocis/eos/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/eos/</guid>
      <description>OCIS can be configured to run on top of eos. While the eos documentation does cover a lot of topics it leaves out some details that you may have to either pull from various docker containers, the forums or even the source itself.
This document is a work in progress of the current setup.
Current status Using ocis and eos it is possible today to manage folders. Sharing is heavily under development.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_konnectd/building/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_konnectd/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-konnectd.git cd ocis-konnectd All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_accounts/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_accounts/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-accounts.git cd ocis-accounts All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_glauth/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_glauth/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-glauth.git cd ocis-glauth All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_phoenix/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_phoenix/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.12. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-phoenix.git cd ocis-phoenix All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_proxy/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_proxy/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-proxy.git cd ocis-proxy All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go.To build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-reva.git cd ocis-reva All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis_thumbnails/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_thumbnails/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.12. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-thubnails.git cd {{ Name }} All required tool besides Go itself and make are bundled or getting automatically installed within the Gopath.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/users/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/users/</guid>
      <description>Demo driver This is a simple user driver for testing. It contains three users:
einstein:relativity marie:radioactivty richard:superfluidity  In order to use the demo driver you need to export the relevant environment variable:
export REVA_USERS_DRIVER=demo  JSON driver In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:
export REVA_USERS_DRIVER=json export REVA_USERS_JSON=/path/to/users.json  For the format of the users.json have a look at the reva examples</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/testing/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/testing/</guid>
      <description>Acceptance tests We are using the ownCloud 10 acceptance testsuite against ocis. To set this up you need the owncloud 10 core repo, a ldap server that the acceptance tests can use to manage users, a redis server for file-versions and the ocis-reva code.
Getting the tests All you need to do to get the acceptance tests is check out the core repo:
git clone https://github.com/owncloud/core.git  Run a ldap server in a docker container The ownCloud 10 acceptance tests will need write permission.</description>
    </item>
    
    <item>
      <title>Setup with ownCloud 10</title>
      <link>https://owncloud.github.io/clients/web/backend-oc10/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/backend-oc10/</guid>
      <description>Prerequisites Decide on which host and port Phoenix will be served, for example https://phoenix-host:8300/phoenix-path/. In this document, we will refer to the following: - &amp;lt;phoenix-url&amp;gt; as the full URL, for example https://phoenix-host:8300/phoenix-path/ - &amp;lt;phoenix-domain&amp;gt; as the protocol, domain and port, for example: https://phoenix-host:8300
Setting up the ownCloud Server Make sure you have an ownCloud Server already installed.
Adjusting config.php Add the following entries to config/config.php:
 tell ownCloud where Phoenix is located:</description>
    </item>
    
    <item>
      <title>Extension</title>
      <link>https://owncloud.github.io/ocis/extensions/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/extensions/</guid>
      <description>How to build and run ocis-simple ocis uses build tags to build different flavors of the binary. In order to work on a new extension we are going to reduce the scope a little and use the simple tag. Let us begin by creating a dedicated folder:
mkdir ocis-extension-workshop &amp;amp;&amp;amp; ocis-extension-workshop Following https://github.com/owncloud/ocis
git clone https://github.com/owncloud/ocis.git cd ocis TAGS=simple make generate build Q: Can you specify which version of phoenix to use?</description>
    </item>
    
    <item>
      <title>GRPC API</title>
      <link>https://owncloud.github.io/extensions/ocis_thumbnails/grpc/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_thumbnails/grpc/</guid>
      <description>pkg/proto/v0/thumbnails.proto GetRequest A request to retrieve a thumbnail
   Field Type Label Description     filepath string  The path to the source image   filetype GetRequest.FileType  The type to which the thumbnail should get encoded to.   etag string  The etag of the source image   width int32  The width of the thumbnail   height int32  The height of the thumbnail   authorization string  The authorization token    GetResponse The service response</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_glauth/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_glauth/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_phoenix/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_phoenix/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_reva/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_reva/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>Setup with OCIS</title>
      <link>https://owncloud.github.io/clients/web/backend-ocis/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/backend-ocis/</guid>
      <description>Setting up OCIS services  Setup OCIS by cloning the ocis repository and following the setup instructions there. Do not start the whole server but run ./bin/ocis --log-level debug $EXTENSION for all the existing extensions except the phoenix service. A list of extensions can be found by running ./bin/ocis without arguments and looking at the &amp;ldquo;Extensions&amp;rdquo; section.  Setting up Phoenix  Please note that config.json is generated by ocis-phoenix so there is no need to create one.</description>
    </item>
    
    <item>
      <title>Debugging</title>
      <link>https://owncloud.github.io/ocis/debugging/</link>
      <pubDate>Thu, 19 Mar 2020 08:21:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/debugging/</guid>
      <description>Debugging As a single binary for easy deployment running ocis server just forks itself to start all the services, which makes debugging those processes a little harder.
Ultimately, we want to be able to stop a single service using eg. ocis kill phoenix so that you can start the service you want to debug in debug mode. We need to change the way we fork processes though, otherwise the runtime will automatically restart a service if killed.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/ocis/building/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go, to build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis.git cd ocis All required tools besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_thumbnails/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_thumbnails/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>Running acceptance tests</title>
      <link>https://owncloud.github.io/clients/web/testing/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/testing/</guid>
      <description>Setting up Selenium There are multiple ways to run Selenium:
 Setup using Docker Setup using Docker Desktop for Mac Setup using a standalone Selenium server  Setup using Docker  Set the environment variables SELENIUM_HOST as localhost and SERVER_HOST in the format http://&amp;lt;ip_addr&amp;gt;:9100. Run yarn run selenium Find the IP address of the docker host with:
docker inspect -f &amp;#34;{{ .NetworkSettings.Gateway }}&amp;#34; selenium`  Alternatively, you can run this command which is equivalen to yarn run selenium:</description>
    </item>
    
    <item>
      <title>Building the documentation</title>
      <link>https://owncloud.github.io/clients/web/building-docs/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/clients/web/building-docs/</guid>
      <description>Buildling the documentation Setting up  Install hugo Run make docs  Viewing the documentation To view the rendered docs in the browser run:
cd hugo hugo -D server Then open &amp;ldquo;http://localhost:1313/&amp;quot;
When making changes to the docs, run make docs again and the server will pick up the changes and reload the page automatically
Deploying the documentation The documentation is automatically deployed from the master branch to https://owncloud.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis_hello/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis_hello/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/ocis/license/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
  </channel>
</rss>